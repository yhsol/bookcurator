{"version":3,"sources":["assets/noPoster.jpg","Components/Header.js","Components/SectionColumn.js","Components/Loader.js","Components/ErrorMessage.js","Components/PosterSmall.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Components/SectionRows.js","Components/Poster.js","Routes/Count/CountPresenter.js","Routes/Count/index.js","Routes/Count/CountContainer.js","Routes/Recent/RecentPresenter.js","Routes/Recent/index.js","Routes/Recent/RecentContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","styled","header","_templateObject","HeaderArea","div","_templateObject2","HeaderTitle","_templateObject3","HeaderNav","ul","_templateObject4","NavItem","li","_templateObject5","props","current","SLInk","Link","_templateObject6","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","SectionColumn_templateObject","Title","span","SectionColumn_templateObject2","Grid","SectionColumn_templateObject3","SectionColumn","title","children","Loader_templateObject","Loader","Loader_Container","ErrorMessage_templateObject","Text","ErrorMessage_templateObject2","color","ErrorMessage","text","ErrorMessage_Container","PosterSmall_templateObject","Image","PosterSmall_templateObject2","bgUrl","ImageForm","PosterSmall_templateObject3","PosterSmall_templateObject4","YearRating","PosterSmall_templateObject5","ImageContainer","PosterSmall_templateObject6","Rating","_templateObject7","Year","_templateObject8","PosterSmall","id","imageUrl","rating","year","_ref$isBook","isBook","concat","PosterSmall_Container","require","substring","role","aria-label","PosterSmall_Title","length","HomePresenter_templateObject","HomePresenter","popular","upcoming","error","loading","Fragment","Helmet_default","HomePresenter_Container","Components_SectionColumn","map","movie","Components_PosterSmall","key","poster_path","vote_average","release_date","Components_ErrorMessage","api","axios","create","baseURL","params","api_key","language","bookApi","get","detail","append_to_response","search","term","query","encodeURI","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","SectionRows_templateObject","SectionRows_templateObject2","SectionRows_templateObject3","SectionRows","SectionRows_Container","SectionRows_Title","SectionRows_Grid","Poster_templateObject","TextContainer","Poster_templateObject2","InfoSection","Poster_templateObject3","SubInfoSection","Poster_templateObject4","Poster_templateObject5","Poster_templateObject6","Poster_templateObject7","Poster_templateObject8","Overview","_templateObject9","_templateObject10","SLink","_templateObject11","Poster","overview","Poster_Container","Poster_Title","Poster_Year","Poster_Rating","Poster_ImageContainer","Poster_Image","CountPresenter_templateObject","CountPresenter","CountPresenter_Container","Components_SectionRows","Components_Poster","CountContainer","Count_CountPresenter","RecentPresenter_templateObject","RecentPresenter","RecentPresenter_templateObject2","RecentPresenter_Container","RecentContainer","console","log","Recent_RecentPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","searchResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","release_Date","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","BackDrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","CoverSection","DetailPresenter_templateObject4","DetailPresenter_templateObject5","InfoTitle","h3","DetailPresenter_templateObject6","InfoItemContainer","DetailPresenter_templateObject7","InfoItem","DetailPresenter_templateObject8","InfoDivider","DetailPresenter_templateObject9","InfoVideos","DetailPresenter_templateObject10","InfoOverview","DetailPresenter_templateObject11","InfoCommentArea","textarea","_templateObject12","Comments","_templateObject13","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_InfoSection","runtime","genres","genre","index","name","videos","video","href","rows","cols","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isDetail","includes","match","push","history","parsedID","parseInt","isNaN","Detail_DetailPresenter","Router","BrowserRouter","Components_Header","Switch","Route","path","exact","component","Home","Count","Recent","Search","Detail","Redirect","from","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","Components_GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6301fc5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.f31a6ce5.jpg\";","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 64px;\r\n\tz-index: 10;\r\n\tbox-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.1);\r\n\tbackground-color: white;\r\n\topacity: 0.98;\r\n`;\r\n\r\nconst HeaderArea = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\twidth: 75vw;\r\n\tmargin: 0 auto;\r\n\tpadding: 0 10px;\r\n`;\r\n\r\nconst HeaderTitle = styled.div`\r\n\theight: 64px;\r\n\tcolor: #ff8906;\r\n\tfont-size: 30px;\r\n\tfont-weight: 500;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst HeaderNav = styled.ul`display: flex;`;\r\n\r\nconst NavItem = styled.li`\r\n\tpadding: 0 14px;\r\n\theight: 64px;\r\n\ttext-align: center;\r\n\tcolor: ${(props) => (props.current ? '#ff8906' : 'rgba(0, 0, 0, 0.5)')};\r\n\t&:hover {\r\n\t\tcolor: #ff8906;\r\n\t}\r\n\ttransition: color .05s linear;\r\n\tfont-size: 19px;\r\n\tfont-weight: 400;\r\n`;\r\n\r\nconst SLInk = styled(Link)`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\theight: 64px;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n\t<Header>\r\n\t\t<HeaderArea>\r\n\t\t\t<HeaderTitle>\r\n\t\t\t\t<SLInk to=\"/\">Bookcurator</SLInk>\r\n\t\t\t</HeaderTitle>\r\n\t\t\t<HeaderNav>\r\n\t\t\t\t<NavItem current={pathname === '/count'}>\r\n\t\t\t\t\t<SLInk to=\"/count\">Count</SLInk>\r\n\t\t\t\t</NavItem>\r\n\t\t\t\t<NavItem current={pathname === '/recent'}>\r\n\t\t\t\t\t<SLInk to=\"/recent\">Recent</SLInk>\r\n\t\t\t\t</NavItem>\r\n\t\t\t\t<NavItem current={pathname === '/search'}>\r\n\t\t\t\t\t<SLInk to=\"/search\">Search</SLInk>\r\n\t\t\t\t</NavItem>\r\n\t\t\t</HeaderNav>\r\n\t\t</HeaderArea>\r\n\t</Header>\r\n));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\t:not(:last-child) {\r\n\t\tmargin-bottom: 50px;\r\n\t}\r\n\tpadding: 0 20px;\r\n\tcolor: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst Title = styled.span`\r\n\tfont-size: 24px;\r\n\tfont-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n\tmargin: 20px auto;\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(auto-fill, 116px);\r\n\tgrid-gap: 20px;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst SectionColumn = ({ title, children }) => (\r\n\t<Container>\r\n\t\t<Title>{title}</Title>\r\n\t\t<Grid>{children}</Grid>\r\n\t</Container>\r\n);\r\n\r\nSectionColumn.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tchildren: PropTypes.oneOfType([ PropTypes.arrayOf(PropTypes.node), PropTypes.node ])\r\n};\r\n\r\nexport default SectionColumn;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tmargin-top: 30px;\r\n\tfont-size: 30px;\r\n\tfont-weight: 500;\r\n\tcolor: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport default () => <Container>Loading...</Container>;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\twidth: 75%;\r\n\tmargin: 50px auto;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n\tcolor: ${(props) => props.color};\r\n\tfont-size: 26px;\r\n\tfont-weight: 600;\r\n`;\r\n\r\nconst ErrorMessage = ({ text, color }) => (\r\n\t<Container>\r\n\t\t<Text color={color}>{text}</Text>\r\n\t</Container>\r\n);\r\n\r\nErrorMessage.propTypes = {\r\n\ttext: PropTypes.string.isRequired,\r\n\tcolor: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Image = styled.div`\r\n\tbackground-image: url(${(props) => props.bgUrl});\r\n\theight: 170px;\r\n\tbackground-size: cover;\r\n\tbackground-position: center center;\r\n`;\r\n\r\nconst ImageForm = styled.div`\r\n\tmargin-bottom: 5px;\r\n\tposition: relative;\r\n\t&:hover {\r\n\t\tbackground-color: black;\r\n\t\t${Image} {\r\n\t\t\topacity: 0.6;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Title = styled.span`\r\n\tdisplay: block;\r\n\tfont-size: 14px;\r\n`;\r\n\r\nconst YearRating = styled.span`\r\n\tposition: absolute;\r\n\tbottom: 8px;\r\n\tright: 6px;\r\n\tleft: 6px;\r\n\tcolor: rgba(200, 200, 200, 5);\r\n\topacity: 0;\r\n\ttransition: opacity 0.1s linear;\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr 1fr;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n\t&:hover {\r\n\t\t${YearRating} {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Rating = styled.span`text-align: right;`;\r\n\r\nconst Year = styled.span`text-align: left;`;\r\n\r\nconst PosterSmall = ({ id, imageUrl, title, rating, year, isBook = false }) => (\r\n\t// Link 값으로 boolean을 설정해서 그게 참일 때, 설정해 둔 url로 이동할 수 있게 설정. 아래의 경우 해당 값의 디테일 페이지로 간다.\r\n\t<Link to={isBook && `/detail/${id}`}>\r\n\t\t<Container>\r\n\t\t\t<ImageContainer>\r\n\t\t\t\t<ImageForm>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tbgUrl={\r\n\t\t\t\t\t\t\timageUrl ? `https://image.tmdb.org/t/p/w500/${imageUrl}` : require('../assets/noPoster.jpg')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<YearRating>\r\n\t\t\t\t\t\t<Year>{year && year.substring(0, 4)}</Year>\r\n\t\t\t\t\t\t<Rating>\r\n\t\t\t\t\t\t\t<span role=\"img\" aria-label=\"rating\">\r\n\t\t\t\t\t\t\t\t★\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t{rating}/10\r\n\t\t\t\t\t\t</Rating>\r\n\t\t\t\t\t</YearRating>\r\n\t\t\t\t</ImageForm>\r\n\t\t\t\t<Title>{title && title.length > 8 ? `${title.substring(0, 8)}...` : title}</Title>\r\n\t\t\t</ImageContainer>\r\n\t\t</Container>\r\n\t</Link>\r\n);\r\n\r\nPosterSmall.propTypes = {\r\n\tid: PropTypes.number.isRequired,\r\n\timageUrl: PropTypes.string,\r\n\ttitle: PropTypes.string.isRequired,\r\n\trating: PropTypes.number,\r\n\tyear: PropTypes.string,\r\n\tisBook: PropTypes.bool\r\n};\r\n\r\nexport default PosterSmall;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport SectionColumn from '../../Components/SectionColumn';\r\nimport Loader from '../../Components/Loader';\r\nimport ErrorMessage from '../../Components/ErrorMessage';\r\nimport PosterSmall from '../../Components/PosterSmall';\r\nimport Helmet from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n\twidth: 75%;\r\n\tmargin: 20px auto;\r\n`;\r\n\r\nconst HomePresenter = ({ popular, upcoming, error, loading }) => (\r\n\t<React.Fragment>\r\n\t\t<Helmet>\r\n\t\t\t<title>Bookcurator</title>\r\n\t\t</Helmet>\r\n\t\t{loading ? (\r\n\t\t\t<Loader />\r\n\t\t) : (\r\n\t\t\t<Container>\r\n\t\t\t\t{popular &&\r\n\t\t\t\tpopular.length > 0 && (\r\n\t\t\t\t\t<SectionColumn title=\"Popular\">\r\n\t\t\t\t\t\t{popular.map((movie) => (\r\n\t\t\t\t\t\t\t<PosterSmall\r\n\t\t\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\t\t\tid={movie.id}\r\n\t\t\t\t\t\t\t\ttitle={movie.title}\r\n\t\t\t\t\t\t\t\timageUrl={movie.poster_path}\r\n\t\t\t\t\t\t\t\trating={movie.vote_average}\r\n\t\t\t\t\t\t\t\t// 아래와 같은 경우, substring 이나 slice 같은 메서드를 쓰는 경우 앞의 값이 null일 경우 에러가 생길 수 있어서 그 값을 확인하는 것이 필요.\r\n\t\t\t\t\t\t\t\tyear={movie.release_date}\r\n\t\t\t\t\t\t\t\tisBook={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</SectionColumn>\r\n\t\t\t\t)}\r\n\t\t\t\t{upcoming &&\r\n\t\t\t\tupcoming.length > 0 && (\r\n\t\t\t\t\t<SectionColumn title=\"Upcoming\">\r\n\t\t\t\t\t\t{upcoming.map((movie) => (\r\n\t\t\t\t\t\t\t<PosterSmall\r\n\t\t\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\t\t\tid={movie.id}\r\n\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\tmovie.title && movie.title.length > 8 ? (\r\n\t\t\t\t\t\t\t\t\t\t`${movie.title.substring(0, 8)}...`\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tmovie.title\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\timageUrl={movie.poster_path}\r\n\t\t\t\t\t\t\t\trating={movie.vote_average}\r\n\t\t\t\t\t\t\t\t// 아래와 같은 경우, substring 이나 slice 같은 메서드를 쓰는 경우 앞의 값이 null일 경우 에러가 생길 수 있어서 그 값을 확인하는 것이 필요.\r\n\t\t\t\t\t\t\t\tyear={movie.release_date && movie.release_date.substring(0, 4)}\r\n\t\t\t\t\t\t\t\tisBook={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</SectionColumn>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && <ErrorMessage text={error} color=\"#ff8906\" />}\r\n\t\t\t</Container>\r\n\t\t)};\r\n\t</React.Fragment>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n\tpopular: PropTypes.array,\r\n\tupcoming: PropTypes.array,\r\n\terror: PropTypes.string,\r\n\tloading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n\tbaseURL: 'https://api.themoviedb.org/3',\r\n\tparams: {\r\n\t\tapi_key: 'fb2398f0003757361045d72497fe13c3',\r\n\t\tlanguage: 'ko-KR'\r\n\t}\r\n});\r\n\r\n// api 호출 시 앞에 movie 를 붙이는 것은 api 정보가 그렇게 구성되어 있기 때문이다. 이름을 바꾸면 에러가 난다.\r\n\r\nexport const bookApi = {\r\n\tpopular: () => api.get('movie/popular'),\r\n\tupcoming: () => api.get('movie/upcoming'),\r\n\tdetail: (id) =>\r\n\t\tapi.get(`movie/${id}`, {\r\n\t\t\tparams: {\r\n\t\t\t\tappend_to_response: 'videos, similar'\r\n\t\t\t}\r\n\t\t}),\r\n\tsearch: (term) =>\r\n\t\tapi.get('search/movie', {\r\n\t\t\tparams: {\r\n\t\t\t\tquery: encodeURI(term)\r\n\t\t\t}\r\n\t\t})\r\n};\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;\r\n","import React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { bookApi } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n\tstate = {\r\n\t\tpopular: null,\r\n\t\tupcoming: null,\r\n\t\terror: null,\r\n\t\tloading: true\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst {data: {results: popular}} = await bookApi.popular();\r\n\t\t\tconst {data: {results: upcoming}} = await bookApi.upcoming();\r\n\t\t\tthis.setState({\r\n\t\t\t\tpopular: popular,\r\n\t\t\t\tupcoming: upcoming\r\n\t\t\t})\r\n\t\t} catch {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"CAN'T FIND INFOMATION\"\r\n\t\t\t})\r\n\t\t} finally {\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// render things to HomePresenter\r\n\trender() {\r\n\t\tconst { popular, upcoming, error, loading } = this.state;\r\n\t\treturn <HomePresenter popular={popular} upcoming={upcoming} error={error} loading={loading} />;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\t:not(:last-child) {\r\n\t\tmargin-bottom: 50px;\r\n\t}\r\n\tpadding: 0 20px;\r\n\tcolor: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst Title = styled.span`\r\n\tfont-size: 24px;\r\n\tfont-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n\tmargin: 20px 0;\r\n\tdisplay: grid;\r\n\tgrid-gap: 20px;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst SectionRows = ({ title, children }) => (\r\n\t<Container>\r\n\t\t<Title>{title}</Title>\r\n\t\t<Grid>{children}</Grid>\r\n\t</Container>\r\n);\r\n\r\nSectionRows.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tchildren: PropTypes.oneOfType([ PropTypes.arrayOf(PropTypes.node), PropTypes.node ])\r\n};\r\n\r\nexport default SectionRows;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 3fr 2fr;\r\n\tpadding: 20px;\r\n\tborder-top: 1px solid rgba(0, 0, 0, 0.3);\r\n\tfont-size: 15px;\r\n\tcolor: rgba(0, 0, 0, 0.6);\r\n\tfont-weight: 500;\r\n`;\r\n\r\nconst TextContainer = styled.span`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: space-around;\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: baseline;\r\n`;\r\n\r\nconst SubInfoSection = styled.div``;\r\nconst ImageContainer = styled.div``;\r\n\r\nconst Title = styled.span`\r\n\tfont-size: 33px;\r\n\tmargin-bottom: 5px;\r\n\tmargin-right: 10px;\r\n\tcolor: rgba(0, 0, 0, 0.8);\r\n\ttransition: color 0.1s linear;\r\n\tfont-weight: 500;\r\n`;\r\n\r\nconst Rating = styled.span``;\r\nconst Year = styled.span``;\r\n\r\nconst Overview = styled.div`line-height: 125%;`;\r\n\r\nconst Image = styled.div`\r\n\tbackground-image: url(${(props) => props.bgUrl});\r\n\theight: 260px;\r\n\twidth: 177px;\r\n\tbackground-size: cover;\r\n\tmargin: 0 auto;\r\n\tbackground-position: center center;\r\n\ttransition: border-bottom 0.2s linear;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n\t&:hover {\r\n\t\t${Image} {\r\n\t\t\tborder-bottom: 6px solid #ff8906;\r\n\t\t}\r\n\t\t${Title} {\r\n\t\t\tcolor: #ff8906;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, overview, isBook = false }) => (\r\n\t// Link 값으로 boolean을 설정해서 그게 참일 때, 설정해 둔 url로 이동할 수 있게 설정. 아래의 경우 해당 값의 디테일 페이지로 간다.\r\n\t<Container>\r\n\t\t<TextContainer>\r\n\t\t\t<InfoSection>\r\n\t\t\t\t<SLink to={isBook && `/detail/${id}`}>\r\n\t\t\t\t\t<Title>{title}</Title>\r\n\t\t\t\t</SLink>\r\n\t\t\t\t<SubInfoSection>\r\n\t\t\t\t\t<Year>{year && year.substring(0, 4)}</Year>\r\n\t\t\t\t\t<Rating>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"rating\">\r\n\t\t\t\t\t\t\t★\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{rating}/10\r\n\t\t\t\t\t</Rating>\r\n\t\t\t\t</SubInfoSection>\r\n\t\t\t</InfoSection>\r\n\t\t\t<Overview>{overview && `${overview.substring(0, 110)}...`}</Overview>\r\n\t\t</TextContainer>\r\n\t\t<ImageContainer>\r\n\t\t\t<SLink to={isBook && `/detail/${id}`}>\r\n\t\t\t\t<Image\r\n\t\t\t\t\tbgUrl={imageUrl ? `https://image.tmdb.org/t/p/w500/${imageUrl}` : require('../assets/noPoster.jpg')}\r\n\t\t\t\t/>\r\n\t\t\t</SLink>\r\n\t\t</ImageContainer>\r\n\t</Container>\r\n);\r\n\r\nPoster.propTypes = {\r\n\tid: PropTypes.number.isRequired,\r\n\timageUrl: PropTypes.string,\r\n\ttitle: PropTypes.string.isRequired,\r\n\trating: PropTypes.number,\r\n\tyear: PropTypes.string,\r\n\toverview: PropTypes.string,\r\n\tisBook: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport SectionRows from 'Components/SectionRows';\r\nimport Loader from '../../Components/Loader';\r\nimport ErrorMessage from '../../Components/ErrorMessage';\r\nimport Poster from '../../Components/Poster';\r\nimport Helmet from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n\twidth: 75%;\r\n\tmargin: 20px auto;\r\n`;\r\n\r\nconst CountPresenter = ({ popular, error, loading }) => (\r\n\t<React.Fragment>\r\n\t\t<Helmet>\r\n\t\t\t<title>Count | Bookcurator</title>\r\n\t\t</Helmet>\r\n\t\t{loading ? (\r\n\t\t\t<Loader />\r\n\t\t) : (\r\n\t\t\t<Container>\r\n\t\t\t\t{popular &&\r\n\t\t\t\tpopular.length > 0 && (\r\n\t\t\t\t\t<SectionRows title=\"Popular\">\r\n\t\t\t\t\t\t{popular.map((movie) => (\r\n\t\t\t\t\t\t\t<Poster\r\n\t\t\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\t\t\tid={movie.id}\r\n\t\t\t\t\t\t\t\ttitle={movie.title}\r\n\t\t\t\t\t\t\t\timageUrl={movie.poster_path}\r\n\t\t\t\t\t\t\t\trating={movie.vote_average}\r\n\t\t\t\t\t\t\t\t// 아래와 같은 경우, substring 이나 slice 같은 메서드를 쓰는 경우 앞의 값이 null일 경우 에러가 생길 수 있어서 그 값을 확인하는 것이 필요.\r\n\t\t\t\t\t\t\t\tyear={movie.release_date}\r\n\t\t\t\t\t\t\t\tisBook={true}\r\n\t\t\t\t\t\t\t\toverview={movie.overview}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</SectionRows>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && <ErrorMessage text={error} color=\"#ff8906\" />}\r\n\t\t\t</Container>\r\n\t\t)};\r\n\t</React.Fragment>\r\n);\r\n\r\nCountPresenter.propTypes = {\r\n\tpopular: PropTypes.array,\r\n\terror: PropTypes.string,\r\n\tloading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default CountPresenter;\r\n","import CountContainer from './CountContainer';\r\n\r\nexport default CountContainer;\r\n","import React from 'react';\r\nimport CountPresenter from './CountPresenter';\r\nimport { bookApi } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n\tstate = {\r\n\t\tpopular: null,\r\n\t\terror: null,\r\n\t\tloading: true\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst {data: {results: popular}} = await bookApi.popular();\r\n\t\t\tthis.setState({\r\n\t\t\t\tpopular: popular\r\n\t\t\t})\r\n\t\t} catch {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Cat't find infomation\"\r\n\t\t\t})\r\n\t\t} finally {\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// render things to CountPresenter\r\n\trender() {\r\n\t\tconst { popular, error, loading } = this.state;\r\n\t\treturn <CountPresenter popular={popular} error={error} loading={loading} />;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport SectionRows from '../../Components/SectionRows';\r\nimport Loader from '../../Components/Loader';\r\nimport ErrorMessage from '../../Components/ErrorMessage';\r\nimport Poster from '../../Components/Poster';\r\nimport Helmet from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n\twidth: 75%;\r\n\tmargin: 20px auto;\r\n`;\r\n\r\nconst SSpan = styled.span`\r\n\tborder-top: 1px solid rgba(0, 0, 0, 0.3);\r\n\tpadding-top: 20px;\r\n`;\r\n\r\nconst RecentPresenter = ({ upcoming, error, loading }) => (\r\n\t<React.Fragment>\r\n\t\t<Helmet>\r\n\t\t\t<title>Recent | Bookcurator</title>\r\n\t\t</Helmet>\r\n\t\t{loading ? (\r\n\t\t\t<Loader />\r\n\t\t) : (\r\n\t\t\t<Container>\r\n\t\t\t\t{upcoming &&\r\n\t\t\t\tupcoming.length > 0 && (\r\n\t\t\t\t\t<SectionRows title=\"Recent\">\r\n\t\t\t\t\t\t{upcoming.map((movie) => (\r\n\t\t\t\t\t\t\t<Poster\r\n\t\t\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\t\t\tid={movie.id}\r\n\t\t\t\t\t\t\t\ttitle={movie.title}\r\n\t\t\t\t\t\t\t\timageUrl={movie.poster_path}\r\n\t\t\t\t\t\t\t\trating={movie.vote_average}\r\n\t\t\t\t\t\t\t\t// 아래와 같은 경우, substring 이나 slice 같은 메서드를 쓰는 경우 앞의 값이 null일 경우 에러가 생길 수 있어서 그 값을 확인하는 것이 필요.\r\n\t\t\t\t\t\t\t\tyear={movie.release_date}\r\n\t\t\t\t\t\t\t\tisBook={true}\r\n\t\t\t\t\t\t\t\toverview={movie.overview}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</SectionRows>\r\n\t\t\t\t)}\r\n\t\t\t\t{error && <ErrorMessage text={error} color=\"#ff8906\" />}\r\n\t\t\t</Container>\r\n\t\t)};\r\n\t</React.Fragment>\r\n);\r\n\r\nRecentPresenter.propTypes = {\r\n\tupcoming: PropTypes.array,\r\n\terror: PropTypes.string,\r\n\tloading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default RecentPresenter;\r\n","import RecentContainer from './RecentContainer';\r\n\r\nexport default RecentContainer;\r\n","import React from 'react';\r\nimport RecentPresenter from './RecentPresenter';\r\nimport { bookApi } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n\tstate = {\r\n\t\tupcoming: null,\r\n\t\terror: null,\r\n\t\tloading: true\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst {data: {results: upcoming}} = await bookApi.upcoming();\r\n\t\t\tthis.setState({\r\n\t\t\t\tupcoming: upcoming\r\n\t\t\t})\r\n\t\t} catch {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Can't find infomation\"\r\n\t\t\t})\r\n\t\t} finally {\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// render things to UpcomingPresenter\r\n\trender() {\r\n\t\tconst { upcoming, error, loading } = this.state;\r\n\t\tconsole.log(this.state);\r\n\t\treturn <RecentPresenter upcoming={upcoming} error={error} loading={loading} />;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport SectionColumn from '../../Components/SectionColumn';\r\nimport Loader from '../../Components/Loader';\r\nimport ErrorMessage from '../../Components/ErrorMessage';\r\nimport PosterSmall from '../../Components/PosterSmall';\r\nimport Helmet from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n\twidth: 75%;\r\n\tmargin: 20px auto;\r\n`;\r\n\r\nconst Form = styled.form`\r\n\tmargin: 20px 0 50px;\r\n\twidth: 100%;\r\n\tpadding: 0 20px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\tall: unset;\r\n\tfont-size: 24px;\r\n\tpadding: 5px;\r\n\tborder-bottom: 1px solid rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst SearchPresenter = ({ searchResults, searchTerm, error, loading, handleSubmit, updateTerm }) => (\r\n\t<React.Fragment>\r\n\t\t<Helmet>\r\n\t\t\t<title>Search | Bookcurator</title>\r\n\t\t</Helmet>\r\n\t\t<Container>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<Input placeholder=\"Search Content!\" value={searchTerm} onChange={updateTerm} />\r\n\t\t\t\t{/* 자바스크립트로부터 value 를 가져오기 위해 value 값을 지정한다. */}\r\n\t\t\t</Form>\r\n\t\t\t{searchResults &&\r\n\t\t\tsearchResults.length > 0 && (\r\n\t\t\t\t<SectionColumn title=\"Search Results\">\r\n\t\t\t\t\t{searchResults.map((movie) => (\r\n\t\t\t\t\t\t<PosterSmall\r\n\t\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\t\tid={movie.id}\r\n\t\t\t\t\t\t\ttitle={movie.title}\r\n\t\t\t\t\t\t\timageUrl={movie.poster_path}\r\n\t\t\t\t\t\t\trating={movie.vote_average}\r\n\t\t\t\t\t\t\t// 아래와 같은 경우, substring 이나 slice 같은 메서드를 쓰는 경우 앞의 값이 null일 경우 에러가 생길 수 있어서 그 값을 확인하는 것이 필요.\r\n\t\t\t\t\t\t\tyear={movie.release_Date}\r\n\t\t\t\t\t\t\tisBook={true}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</SectionColumn>\r\n\t\t\t)}\r\n\t\t\t{error && <ErrorMessage text={error} color=\"#ff8906\" />}\r\n\t\t\t{searchResults && searchResults.length === 0 && <ErrorMessage text=\"Nothing Found\" color=\"#82ccdd\" />}\r\n\t\t</Container>\r\n\t</React.Fragment>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n\tsearchResults: PropTypes.array,\r\n\tsearchTerm: PropTypes.string,\r\n\terror: PropTypes.string,\r\n\tloading: PropTypes.bool.isRequired,\r\n\thandleSubmit: PropTypes.func.isRequired,\r\n\tupdateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;\r\n","import React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport { bookApi } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n\tstate = {\r\n\t\tsearchResults: null,\r\n\t\tsearchTerm: '',\r\n\t\terror: null,\r\n\t\tloading: false\r\n\t};\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { searchTerm } = this.state;\r\n\t\tif (searchTerm !== '') {\r\n\t\t\tthis.searchByTerm();\r\n\t\t}\r\n\t};\r\n\t\r\n\tupdateTerm = (event) => {\r\n\t\tconst { target: { value } } = event;\r\n\t\tconsole.log(value);\r\n\t\tthis.setState({\r\n\t\t\tsearchTerm: value\r\n\t\t})\r\n\t};\r\n\r\n\tsearchByTerm = async () => {\r\n\t\tconst { searchTerm } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tloading: true\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tconst {data: {results: searchResults}} = await bookApi.search(searchTerm);\r\n\t\t\tthis.setState({\r\n\t\t\t\tsearchResults: searchResults\r\n\t\t\t})\r\n\t\t} catch {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Can't find infomation\"\r\n\t\t\t})\r\n\t\t} finally {\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t// maybe componentDidMount 에서 location.reload 나 history 를 이용해서 refresh 할 수 있지 않을까.\r\n\r\n\t// render things to SearchPresenter\r\n\trender() {\r\n\t\tconst { searchResults, searchTerm, error, loading } = this.state;\r\n\t\treturn <SearchPresenter \r\n\t\t\tsearchResults={searchResults} \r\n\t\t\tsearchTerm={searchTerm} \r\n\t\t\terror={error} \r\n\t\t\tloading={loading} \r\n\t\t\thandleSubmit={this.handleSubmit}\r\n\t\t\tupdateTerm={this.updateTerm}\r\n\t\t/>;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Loader from '../../Components/Loader';\r\nimport Helmet from 'react-helmet';\r\nimport ErrorMessage from '../../Components/ErrorMessage';\r\n\r\nconst Container = styled.div`\r\n\twidth: 100vw;\r\n\theight: calc(100vh - 64px);\r\n\tposition: relative;\r\n\tmargin: 0 auto;\r\n\tbackground-color: black;\r\n\tfont-size: 15px;\r\n\tcolor: rgba(255, 255, 255, 0.8);\r\n`;\r\n\r\nconst BackDrop = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tbackground-image: url(${(props) => props.bgImage});\r\n\tbackground-position: center center;\r\n\tbackground-size: cover;\r\n\tfilter: blur(3px);\r\n\topacity: 0.5;\r\n\tz-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n\tdisplay: flex;\r\n\tposition: relative;\r\n\tpadding: 50px 120px;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;\r\n\r\nconst CoverSection = styled.div`\r\n\twidth: 30%;\r\n\theight: 100%;\r\n\tbackground-image: url(${(props) => props.bgImage});\r\n\tbackground-size: cover;\r\n\tbackground-position: center center;\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\n\twidth: 70%;\r\n\theight: 100%;\r\n\tmargin-left: 20px;\r\n\tpadding: 14px 0;\r\n`;\r\n\r\nconst InfoTitle = styled.h3`\r\n\tfont-size: 35px;\r\n\tmargin-bottom: 20px;\r\n`;\r\n\r\nconst InfoItemContainer = styled.div``;\r\n\r\nconst InfoItem = styled.span`\r\n\tcolor: rgba(255, 255, 255, 0.6);\r\n\tfont-weight: 600;\r\n`;\r\n\r\nconst InfoDivider = styled.span`\r\n\tmargin: 0 10px;\r\n\tcolor: rgba(255, 255, 255, 0.6);\r\n\tfont-weight: 600;\r\n`;\r\n\r\nconst InfoVideos = styled.div`\r\n\tmargin: 50px 0;\r\n\tline-height: 190%;\r\n`;\r\n\r\nconst InfoOverview = styled.p`\r\n\tline-height: 125%;\r\n\tfont-size: 17px;\r\n`;\r\n\r\nconst InfoCommentArea = styled.textarea`\r\n\tall: unset;\r\n\tmargin-top: 120px;\r\n\tfont-size: 24px;\r\n\tcolor: white;\r\n\t::placeholder {\r\n\t\tcolor: white;\r\n\t\tline-height: 30px;\r\n\t\tborder-bottom: 1px solid rgba(255, 255, 255, 0.6);\r\n\t}\r\n`;\r\n\r\nconst Comments = styled.div`\r\n\twidth: 75vw;\r\n\tmargin: 30px auto;\r\n\tfont-size: 24px;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n\tloading ? (\r\n\t\t<React.Fragment>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Loading | Bookcurator</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<Loader />\r\n\t\t</React.Fragment>\r\n\t) : error ? (\r\n\t\t<ErrorMessage text={error} color=\"#ff8906\" />\r\n\t) : (\r\n\t\t<React.Fragment>\r\n\t\t\t<Container>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>{result.title} | Bookcurator</title>\r\n\t\t\t\t</Helmet>\r\n\t\t\t\t<BackDrop bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`} />\r\n\t\t\t\t<Content>\r\n\t\t\t\t\t<CoverSection\r\n\t\t\t\t\t\tbgImage={\r\n\t\t\t\t\t\t\tresult.poster_path ? (\r\n\t\t\t\t\t\t\t\t`https://image.tmdb.org/t/p/original/${result.poster_path}`\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\trequire('../../assets/noPoster.jpg')\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InfoSection>\r\n\t\t\t\t\t\t<InfoItemContainer>\r\n\t\t\t\t\t\t\t<InfoTitle>{result.title}</InfoTitle>\r\n\t\t\t\t\t\t\t<InfoItem>\r\n\t\t\t\t\t\t\t\t{result.release_date ? result.release_date.substring(0, 4) : '! Release Date'}\r\n\t\t\t\t\t\t\t</InfoItem>\r\n\t\t\t\t\t\t\t<InfoDivider>/</InfoDivider>\r\n\t\t\t\t\t\t\t<InfoItem>{result.runtime ? `${result.runtime} min` : '! Run Time'}</InfoItem>\r\n\t\t\t\t\t\t\t<InfoDivider>/</InfoDivider>\r\n\t\t\t\t\t\t\t<InfoItem>{result.vote_average ? `★ ${result.vote_average}` : '! Vote Average'}</InfoItem>\r\n\t\t\t\t\t\t\t<InfoDivider>/</InfoDivider>\r\n\t\t\t\t\t\t\t<InfoItem>\r\n\t\t\t\t\t\t\t\t{/* result.genres 에다가 map 을 하면 각각의 Array 는 genre 라는 새로운 Array들로 구성된다. 그리고 새롭게 구성된 genre라는 Array들에서 name값을 찾는것. */}\r\n\t\t\t\t\t\t\t\t{result.genres && result.genres.length !== 0 ? (\r\n\t\t\t\t\t\t\t\t\tresult.genres.map(\r\n\t\t\t\t\t\t\t\t\t\t(genre, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\tresult.genres.length === index + 1 ? genre.name : `${genre.name} · `\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t'! Genres'\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</InfoItem>\r\n\t\t\t\t\t\t\t<InfoVideos>\r\n\t\t\t\t\t\t\t\t{result.videos ? (\r\n\t\t\t\t\t\t\t\t\tresult.videos.results.map(\r\n\t\t\t\t\t\t\t\t\t\t(video, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\tindex < 3 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={`https://www.youtube.com/watch?v=${video.key}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget={`_blank`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{video.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</InfoVideos>\r\n\t\t\t\t\t\t</InfoItemContainer>\r\n\t\t\t\t\t\t<InfoOverview>{result.overview ? result.overview : 'Nothing Found'}</InfoOverview>\r\n\t\t\t\t\t\t<InfoCommentArea name=\"textarea\" rows=\"5\" cols=\"75\" placeholder=\"Write Comments here...\">\r\n\t\t\t\t\t\t\t{}\r\n\t\t\t\t\t\t</InfoCommentArea>\r\n\t\t\t\t\t</InfoSection>\r\n\t\t\t\t</Content>\r\n\t\t\t</Container>\r\n\t\t\t<Comments>It's comment area</Comments>\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\nDetailPresenter.propTypes = {\r\n\tresult: PropTypes.object,\r\n\terror: PropTypes.string,\r\n\tloading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;\r\n","import React from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\nimport { bookApi } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst { location: { pathname } } = props;\r\n\t\tthis.state = {\r\n\t\t\tresult: null,\r\n\t\t\terror: null,\r\n\t\t\tloading: true,\r\n\t\t\tisDetail: pathname.includes('/detail/')\r\n\t\t};\r\n\t}\r\n\r\n\t// 위에서 constructor 메서드를 쓴 이유는 componentDidMount 메서드를 사용했기 때문인가? \r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { match: { params: { id } }, history: { push } } = this.props;\r\n\t\tconst { isDetail } = this.state;\r\n\t\tconst parsedID = parseInt(id);\r\n\t\tif (isNaN(parsedID)) {\r\n\t\t\treturn push('/');\r\n\t\t}\r\n\t\tlet result = null;\r\n\t\ttry {\r\n\t\t\tif(isDetail) {\r\n\t\t\t\t({data: result} = await bookApi.detail(parsedID));\r\n\t\t\t}\r\n\t\t\tconsole.log(result);\r\n\t\t} catch {\r\n\t\t\tthis.setState({ error: \"Cat't find infomation\" })\r\n\t\t} finally {\r\n\t\t\tthis.setState({ loading: false, result })\r\n\t\t}\r\n\t}\r\n\r\n\t// render things to DetailPresenter\r\n\trender() {\r\n\t\tconst { result, error, loading } = this.state;\r\n\t\treturn <DetailPresenter result={result} error={error} loading={loading} />;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Home from '../Routes/Home';\r\nimport Count from '../Routes/Count';\r\nimport Recent from '../Routes/Recent';\r\nimport Search from '../Routes/Search';\r\nimport Detail from '../Routes/Detail';\r\n\r\nexport default () => (\r\n\t<Router>\r\n\t\t<React.Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" exact component={Home} />\r\n\t\t\t\t<Route path=\"/count\" exact component={Count} />\r\n\t\t\t\t<Route path=\"/recent\" exact component={Recent} />\r\n\t\t\t\t<Route path=\"/search\" exact component={Search} />\r\n\t\t\t\t<Route path=\"/detail/:id\" exact component={Detail} />\r\n\t\t\t\t<Redirect from=\"*\" to=\"/\" />\r\n\t\t\t</Switch>\r\n\t\t</React.Fragment>\r\n\t</Router>\r\n);\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\t${reset};\r\n\ta {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: inherit;\r\n\t}\r\n\t* {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\tbody {\r\n\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n\t\tfont-size: 14px;\r\n\t\tpadding-top: 64px;\r\n\t}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { Component } from 'react';\nimport Router from './Router';\nimport GlobalStyles from './GlobalStyles';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Router />\n\t\t\t\t<GlobalStyles />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}